#!/bin/env bash

###############################################################################
###############################################################################
###############################################################################
############## CONFIGURATION THAT WORKS ON BOTH `BASH` AND `ZSH` ##############
###############################################################################
###############################################################################
###############################################################################

###############################################################################
# Startup Functions
###############################################################################

# [ -z "$TMUX" ] && tmux attach # All terminals with 1 tmux
# [ -z "$TMUX" ] && tmux new # All terminals with different tmux

nvimterm() {
  if ! pgrep -f "^nvim.*-c terminal" >/dev/null; then
    nvim -c "terminal"
  fi
}
# uncomment this if you want every bash terminal to open in neovim
# some cons:
# - if you open nvim in it you'll have 2 nvim instances opened
# - no pixel image support
# nvimterm

###############################################################################
# Starting Echoes
###############################################################################

echo \
  "
⠀⠀⠀⠀⠀⢿⣿⣿⣿⡆⠀⠁⠀⠀⣾⣿⣿⣿⣿⣿⣿⣟⢝⢟⣿⣿⣿⣿⡇⠀
⠀⠀⠀⠀⠀⢸⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣾⣿⣿⣿⢿⣿⡉⠀
⠀⠀⠀⢀⠔⣡⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⣶⣿⣷⣄
⠀⠀⢰⣿⣿⡟⣿⣿⣿⡟⠋⠉⢩⠀⠀⠀⠉⠉⠙⢻⠿⣿⣿⣯⣿⣿⣯⣿⡝⣿
⠀⠀⠀⠉⢻⢱⣿⡟⠀⡇⠐⡀⠘⣇⠀⠀⣀⣀⠀⠘⡆⠀⢹⣿⣟⣻⣿⣿⠿⠉
⠀⠀⠀⠀⣈⢻⡇⡇⣼⠻⡒⢣⡀⠸⡙⢍⠈⢮⣍⣁⡇⠀⡎⣗⡿⠀⣿⣿⡀⠀
⢄⣀⣀⣀⣿⡘⡿⣿⣇⣠⣽⣴⣟⠦⣱⣀⣿⣾⣶⣽⡇⢢⣿⡿⠇⠀⣿⣿⣿⣶
⠀⠉⠛⠿⡿⢇⣷⣿⣟⢼⣏⡏⠛⠷⣂⠉⠘⠧⠝⢊⣇⣼⠟⠁⠀⢠⣿⣿⣿⡙
⠀⠀⠀⠀⢘⣼⣼⡿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠄⣚⣿⣿⣯⣭⣲⣼⣿⣿⣿⣷
⠀⠀⠀⠴⠯⠟⣩⣷⣿⣷⣄⠀⠀⠠⠄⠂⠀⠐⡫⠋⣿⣿⣿⣿⣿⣿⣿⡿⣏⠙
⠀⠀⠀⠀⣠⡞⢡⣿⣿⣿⡿⣿⣦⣄⣀⣠⣴⣵⣶⣾⡿⠻⠋⣿⣿⣿⣿⣧⠀⠈
⠀⠀⢀⢞⡟⢰⣬⣼⣿⣿⣷⣿⣿⣿⣾⣿⣿⣿⠿⠋⠀⠀⡼⢿⣾⣿⣿⣿⡀⠀
⠀⠀⠂⣾⠁⢨⣿⠟⢛⣿⣿⣿⣿⣿⣿⡿⠛⠁⠀⠀⢀⣾⣷⣎⠙⠻⣿⡟⢆⠀
⠀⠀⠘⡀⠀⣼⣇⣠⠾⠿⠛⠋⠉⠀⠀⠀⠀⠀⠀⣠⣿⠿⠛⠉⣧⠀⠈⠃⠀⡆
⠀⠀⠀⠊⠦⠿⠓⢦⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠞⠉⠀⠀⠀⠀⠈⠆⠀⠀⠀⠄"
echo \
  "
    胡桃ちゃんは一番でーす！ "

###############################################################################
# Aliases
###############################################################################

# alias rm='trash'

if command -v lsd >/dev/null 2>&1; then
  alias ls='lsd --color=auto'
fi

alias grep='grep --color=auto'
alias fm='thunar & disown'
alias ..='cd ../'
alias ...='cd ../../'
# alias vi='nvim' # pretty goofy yea.
# alias vim='nvim'
alias haskell='cd ~/Documents/Code/Haskell/'
alias c='cd ~/Documents/Code/C/'
alias javascript='cd ~/Documents/Code/JavaScript/'
alias cpp='cd ~/Documents/Code/CPP/'
alias websites='cd ~/Documents/Code/Websites/'
alias python='cd ~/Documents/Code/Python/'
alias py='python3'
alias rust='cd ~/Documents/Code/rust/'
alias golang='cd ~/Documents/Code/go/'
alias c#='cd ~/Documents/Code/C#/'
alias coding='cd ~/Documents/Code/'
alias hyprland-config='cd ~/.config/hypr/'
alias hyprv4-config='cd ~/.config/HyprV/'

alias webapps='cd /usr/share/webapps/'

# KITTY ONLY ALIAS:
alias img='kitten icat'
alias imgl='kitten icat --align left'

# Pipe a command to | clip
alias clip='xclip -selection clipboard'
alias ff='fastfetch'

###############################################################################
# Custom Flags
###############################################################################

# Rust app build optimization
export RUSTFLAGS="-C opt-level=3 -C target-cpu=native"

###############################################################################
# Exports
###############################################################################

# Required for CLI only installs.
GPG_TTY="$(tty)"
export GPG_TTY

# The $ZSH variable is needed for the full_setup.sh
# script which runs in bash by default for
# compatibility sake.
export ZSH="$HOME/.oh-my-zsh"

export EDITOR=nvim

export LC_ALL=en_US.UTF-8

export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus

export PROGRAMS="$HOME/.config/programs/"

export DOTNET_ROOT=$HOME/.dotnet

# More likely than not. PATH is already an export.
if [ -z "${PATH-}" ]; then
  export PATH=/usr/local/bin:/usr/bin:/bin
fi

PATH="$PROGRAMS/bin/:$PATH"
PATH="$PROGRAMS/py_scripts/:$PATH"
PATH="$PROGRAMS/shell_scripts/:$PATH"

PATH="$PATH:$HOME/.cargo/bin"

PATH="$HOME/.cabal/bin:$HOME/.ghcup/bin:$PATH"

PATH="$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools"
PATH="$PATH:$HOME/.local/bin"
PATH="$PATH:$HOME/shared_rust_target/release"
PATH="$PATH:$HOME/.spicetify"

# Example usage
#
# ```sh
# mkdir "MONTHS[@]" # NOTE: Pivots off your CWD.
# ```
export MONTHS=(
  "January"
  "February"
  "March"
  "April"
  "May"
  "June"
  "July"
  "August"
  "September"
  "October"
  "November"
  "December"
)

###############################################################################
# Extra Utility Functions
###############################################################################

# Run cargo tests when doing cargo run
cargo() {
  if [ "$1" = "run" ]; then
    command cargo test --all-features && command cargo run "${@:2}"
  else
    command cargo "$@"
  fi
}

nvim() {
  if [ "$1" = "tui" ]; then
    /usr/bin/nvim "${@:2}"
  else
    neovide "$@" &
    disown
  fi
}

# Do a fuzzy find and pipe the output into neovim
fz() {
  nvim "$(fzf --preview 'cat {}')"
}
# Alias for fz
cdf() {
  fz
}
